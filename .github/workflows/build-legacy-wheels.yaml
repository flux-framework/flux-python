name: build-legacy flux-python

on:
  pull_request: []
  workflow_dispatch:
    inputs:
      rc:
        description: 'Release candiate to target for wheels'
        default: "0"
      repo:
        description: 'Repository to build from'
        default: "https://github.com/rse-ops/flux-core-python"

jobs:
  build-manual:
    runs-on: ubuntu-latest
    container:
      image: fluxrm/testenv:focal
    steps:
    - uses: actions/checkout@v3

    - name: Prepare Versions
      env:
        FLUX_RELEASE_VERSION: ${{ inputs.release_version }}
        FLUX_BRANCH: ${{ inputs.branch }}
        FLUX_REPO: ${{ inputs.repo }}
      run: |
        echo ${FLUX_RELEASE_VERSION} > ./flux-release-version
        echo ${FLUX_BRANCH} > ./flux-branch
        echo ${FLUX_REPO} > ./flux-repo

    - uses: RalfG/python-wheels-manylinux-build@v0.7.1-manylinux2010_x86_64
      with:
        python-versions: 'cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310 cp311-cp311' 
        # build-requirements: 'cython numpy'
        # system-packages: 'lrzip-devel zlib-devel'
        pre-build-command: sh ./docker/pre-build.sh
        # package-path: 'my_project'
        #pip-wheel-args: '-w ./dist --no-deps'

    - name: Build Python Wheels
      run: |
        /bin/bash ./docker/install-mamba.sh
        /bin/bash ./docker/build-wheels.sh

    - name: Install dependencies
      if: (github.event_name != 'pull_request')
      run: python3 -m pip install setuptools wheel twine

    - name: Build and publish
      if: (github.event_name != 'pull_request')
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USER }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASS }}
      run: twine upload dist/*
